// <auto-generated />
using System;
using MSOC.Backend.Service;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MSOC.Backend.Migrations
{
    [DbContext(typeof(DatabaseService))]
    [Migration("20240828144041_AnotherBeginning")]
    partial class AnotherBeginning
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("MSOC.Backend.Database.Models.Player", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsLeader")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TeamId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("MSOC.Backend.Database.Models.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("MSOC.Backend.Database.Models.Score", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfAcceptance")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfAdmission")
                        .HasColumnType("TEXT");

                    b.Property<int>("DxScore1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DxScore2")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Sub1")
                        .HasColumnType("REAL");

                    b.Property<double>("Sub2")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId")
                        .IsUnique();

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("MSOC.Backend.Database.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("MSOC.Backend.Database.Models.Player", b =>
                {
                    b.HasOne("MSOC.Backend.Database.Models.School", "School")
                        .WithMany()
                        .HasForeignKey("SchoolId");

                    b.HasOne("MSOC.Backend.Database.Models.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId");

                    b.Navigation("School");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("MSOC.Backend.Database.Models.Score", b =>
                {
                    b.HasOne("MSOC.Backend.Database.Models.Player", "Player")
                        .WithOne("Score")
                        .HasForeignKey("MSOC.Backend.Database.Models.Score", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("MSOC.Backend.Database.Models.Player", b =>
                {
                    b.Navigation("Score");
                });

            modelBuilder.Entity("MSOC.Backend.Database.Models.Team", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
